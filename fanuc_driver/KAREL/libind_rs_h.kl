-- Software License Agreement (BSD License)
--
-- Copyright (c) 2012, Southwest Research Institute
-- All rights reserved.
--
-- Redistribution and use in source and binary forms, with or without
-- modification, are permitted provided that the following conditions
-- are met:
--
--  * Redistributions of source code must retain the above copyright
--    notice, this list of conditions and the following disclaimer.
--  * Redistributions in binary form must reproduce the above
--    copyright notice, this list of conditions and the following
--    disclaimer in the documentation and/or other materials provided
--    with the distribution.
--  * Neither the name of the Southwest Research Institute nor the names 
--    of its contributors may be used to endorse or promote products 
--    derived from this software without specific prior written 
--    permission.
--
-- THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
-- "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
-- LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
-- FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
-- COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
-- INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
-- BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
-- LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
-- CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
-- LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
-- ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
-- POSSIBILITY OF SUCH DAMAGE.



--------------------------------------------------------------------------------
-- 
-- libind_rs routine prototypes
-- 
-- author: Shaun Edwards (Southwest Research Institute)
-- 
--------------------------------------------------------------------------------




--------------------------------------------------------------------------------
-- 
-- Constructor: creates a fully initialized message
-- 
-- [in    ]  this      : the message to initialise
-- [return]            :    0 IF no error
--                       <  0 on any error
-- 
--------------------------------------------------------------------------------
ROUTINE irs_ctor(this : ind_rs_t) FROM libind_rs




--------------------------------------------------------------------------------
-- 
-- Reset state of the robot status.
-- 
-- [in    ]  this    : the message to reset
-- 
--------------------------------------------------------------------------------
ROUTINE irs_reset(this : ind_rs_t) FROM libind_rs




--------------------------------------------------------------------------------
-- 
-- Returns true if robot is in motion
-- 
-- [return    ]      : TRUE if in motion
-- 
--------------------------------------------------------------------------------
ROUTINE irs_in_mtn: BOOLEAN FROM libind_rs




--------------------------------------------------------------------------------
-- 
-- Update the message with current robot status
-- 
-- [in    ]  this    : the message to update
-- 
--------------------------------------------------------------------------------
ROUTINE irs_update(this : ind_rs_t) FROM libind_rs




--------------------------------------------------------------------------------
-- 
-- Serialise a topic verison of the message. Write bytestream to 'fd'.
-- 
-- [in    ]  this    : the packet to serialise
-- [in    ]  fd      : file desc to write to
-- [return]          :    0 IFF no error
--                     <  0 on any error
-- 
--------------------------------------------------------------------------------
ROUTINE irs_tpc_srl(this : ind_rs_t; fd : FILE) : INTEGER FROM libind_rs



--------------------------------------------------------------------------------
-- 
-- Return string representation of rs data (header not included).
-- 
-- [in    ]  this    : the packet.
-- [return]          : string representation of given packet.
-- 
--------------------------------------------------------------------------------
ROUTINE irs_tostr(this : ind_rs_t) : STRING FROM libind_rs




--------------------------------------------------------------------------------
-- 
-- Dump string rep of message to file descriptor 'fd'.
-- 
-- [in    ]  this    : the packet to dump
-- [in    ]  fd      : file desc to write string representation to.
-- 
--------------------------------------------------------------------------------
ROUTINE irs_dump(this : ind_rs_t; fd : FILE) FROM libind_rs
